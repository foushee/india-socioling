"from mother, father, teacher", "from school and parents",
"from society and school", "from the society and school",
"mother, father, and teacher", "neighbour friends",
"school, brother, mother, father",
"school, father and mother")
other_responses <- c("from others (i do not speak)", "from saint", "I learn it",
"mother tongue", "myself", "staff")
chilangs_df$learned_family <- case_match(
chilangs_df$how_learned,
family_responses ~ 1,
""~NA,
.default=0
)
chilangs_df$learned_school <- case_match(
chilangs_df$how_learned,
school_responses ~ 1,
""~NA,
.default=0
)
chilangs_df$learned_birth <- case_match(
chilangs_df$how_learned,
birth_responses ~ 1,
""~NA,
.default=0
)
chilangs_df$learned_neighborhood <- case_match(
chilangs_df$how_learned,
neighborhood_responses ~ 1,
""~NA,
.default=0
)
chilangs_df$learned_friends <- case_match(
chilangs_df$how_learned,
friends_responses ~ 1,
""~NA,
.default=0
)
chilangs_df$learned_other <- case_match(
chilangs_df$how_learned,
other_responses ~ 1,
""~NA,
.default=0
)
chilangs_df$learned_multiple <- case_match(
chilangs_df$how_learned,
crosscat_responses ~ 1,
""~NA,
.default=0
)
chilangs_df$how_learned_coded <- NA
chilangs_df$how_learned_coded[chilangs_df$learned_family==1 &
chilangs_df$learned_multiple==0] <- "family"
chilangs_df$how_learned_coded[chilangs_df$learned_school==1 &
chilangs_df$learned_multiple==0] <- "school"
table(chilangs_df$learned_multiple)
chilangs_df$how_learned_coded[chilangs_df$learned_multiple==1] <- "multiple"
View(chilangs_df)
chilangs_df$learned_family <- case_match(
chilangs_df$how_learned,
family_responses ~ 1,
c(NA,"")~NA,
.default=0
)
chilangs_df$learned_school <- case_match(
chilangs_df$how_learned,
school_responses ~ 1,
c(NA,"")~NA,
.default=0
)
chilangs_df$learned_birth <- case_match(
chilangs_df$how_learned,
birth_responses ~ 1,
c(NA,"")~NA,
.default=0
)
chilangs_df$learned_neighborhood <- case_match(
chilangs_df$how_learned,
neighborhood_responses ~ 1,
c(NA,"")~NA,
.default=0
)
chilangs_df$learned_friends <- case_match(
chilangs_df$how_learned,
friends_responses ~ 1,
c(NA,"")~NA,
.default=0
)
chilangs_df$learned_other <- case_match(
chilangs_df$how_learned,
other_responses ~ 1,
c(NA,"")~NA,
.default=0
)
chilangs_df$learned_multiple <- case_match(
chilangs_df$how_learned,
crosscat_responses ~ 1,
c(NA,"")~NA,
.default=0
)
chilangs_df$how_learned_coded <- NA
chilangs_df$how_learned_coded[chilangs_df$learned_family==1 &
chilangs_df$learned_multiple==0] <- "family"
chilangs_df$how_learned_coded[chilangs_df$learned_school==1 &
chilangs_df$learned_multiple==0] <- "school"
chilangs_df$how_learned_coded[chilangs_df$learned_neighborhood==1 &
chilangs_df$learned_multiple==0] <- "neighborhood"
chilangs_df$how_learned_coded[chilangs_df$learned_friends==1 &
chilangs_df$learned_multiple==0] <- "friends"
chilangs_df$how_learned_coded[chilangs_df$learned_birth==1 &
chilangs_df$learned_multiple==0] <- "birth"
chilangs_df$how_learned_coded[chilangs_df$learned_other==1 &
chilangs_df$learned_multiple==0] <- "other"
chilangs_df$how_learned_coded[chilangs_df$learned_multiple==1] <- "multiple"
View(chilangs_df)
d_full %>%
group_by(id, sequence, question_type) %>%
mutate(nrows=n()) %>%
filter(nrows>1, !is.na(sequence), response!="") %>%
group_by(question_type, id) %>%
summarize(n=n())
d_full %>%
filter(question_type=="faces") %>%
group_by(id, question_type, sequence) %>%
mutate(nrows=n()) %>%
filter(nrows>1, !is.na(sequence), response!="")
table(d_full$id)
write.csv(chilangs_df, here('data/r_dfs/subsets/child_language_data.csv'))
language_vars
write.csv(i, here('data/r_dfs/subsets/language_identification_data.csv'))
###############################################################################
### read in data files
# hand-entered and lightly cleaned data with demographic info
d <- read.csv(here('data/r_dfs/full_cleaned/india_socioling_data_final.csv'))
###############################################################################
i <- d %>% filter(question_type=="id") %>%
dplyr::select(c("study_name", "school", "id", "standard", "standard_num",
"child_age", "child_age_centered", "child_sex", "child_religion",
"mother_tongue", "home_language", "friends_language",
"sequence", "question_type",
"language", "army_navy_language",
"presentation", "speaker_gender", "response", "correct"))
i$language <- factor(
i$language, levels=language_vars,
labels=language_labels)
write.csv(i, here('data/r_dfs/subsets/language_identification_data.csv'))
i$id_correct <- i$correct
i %>%
dplyr::select(id, language, id_correct) %>%
write.csv(., here('data/r_dfs/subsets/language_identification_correct.csv'))
###############################################################################
###############################################################################
## 121 - India Sociolinguistics (isl) Analyses
## Clean manually-entered data for face selection trials and create new df
## Ruthe Foushee
## 17 August 2023, for Cognitive Development submission
## Subset data, add binary face selection columns, write face_selection_data.csv
###############################################################################
###############################################################################
library(here)
here::i_am('0_preprocessing/prepping-associations-df.R')
###############################################################################
###############################################################################
## 121 - India Sociolinguistics (isl) Analyses
## Clean manually-entered data for face selection trials and create new df
## Ruthe Foushee
## 17 August 2023, for Cognitive Development submission
## Subset data, add binary face selection columns, write face_selection_data.csv
###############################################################################
###############################################################################
library(here)
here::i_am('0_preprocessing/prepping-associations-df.R')
f <- read.csv(here('data/r_dfs/subsets/face_selection_data.csv'))[,-1]
factor_vars <- c('study_name', 'id', 'child_sex', 'child_religion',
'school', 'standard',
'question_type', 'language', 'speaker_gender',
'army_navy_language')
i <- read.csv(here('data/r_dfs/subsets/language_identification_data.csv'))[,-1]
factor_vars <- c('study_name', 'id', 'child_sex', 'child_religion',
'school', 'standard',
'question_type', 'language', 'speaker_gender',
'army_navy_language')
numeric_vars <- c('standard_num', 'child_age', 'child_age_centered',
'sequence', 'coded_wealth')
id_summary_tab <- i %>%
group_by(language) %>%
summarize(mean_accuracy = na.mean(correct),
cilo = mean_accuracy-ci.low(correct),
cihi = mean_accuracy + ci.high(correct))
id_summary_tab
id_summary_tab$language <- factor(id_summary_tab$language, levels=language_labels)
ggplot(id_summary_tab,
aes(x=language, y=mean_accuracy)) +
geom_bar(stat="identity", aes(fill=language), alpha=0.9) +
scale_fill_manual(values=language_colors, name="Language") +
geom_errorbar(aes(ymin=cilo, ymax=cihi), width=0, color=line_color) +
scale_color_manual(values=language_colors, name="Language") +
ylim(0, 1) +
labs(title='Language Identification Accuracy') +
ylab("Proportion Correct") +
xlab("Grade") +
sans_axes_theme_bigger +
theme(axis.text.x=element_text(angle=60, hjust=1))
id_age_summary_tab <- i %>%
group_by(language, child_age, id) %>%
summarize(accuracy = na.mean(correct))
id_age_summary_tab
id_lmer <- lmer(correct ~ child_age*language + child_religion + (1|id), i)
id_lmer <- lmer(correct ~ child_age_centered*language + child_religion + (1|id), i)
i <- read.csv(here('data/r_dfs/subsets/language_identification_data.csv'))[,-1]
factor_vars <- c('study_name', 'id', 'child_sex', 'child_religion',
'school', 'standard',
'question_type', 'language', 'speaker_gender',
'army_navy_language')
numeric_vars <- c('standard_num', 'child_age', 'child_age_centered',
'sequence', 'coded_wealth')
i <- i %>%
mutate_at(factor_vars, as.factor) %>%
mutate_at(numeric_vars, as.numeric)
numeric_vars <- c('standard_num', 'child_age', 'child_age_centered',
'sequence')
i <- i %>%
mutate_at(factor_vars, as.factor) %>%
mutate_at(numeric_vars, as.numeric)
id_lmer <- lmer(correct ~ child_age_centered*language + child_religion + (1|id), i)
i$child_age
id_glmer <- glmer(correct ~ child_age_centered*language + child_religion +
(1|id), family="binomial", i)
id_glmer <- glmer(correct ~ child_age_centered*language + child_religion +
(1|id), family="binomial", i)
summary(id_lmer)
summary(id_glmer)
id_glmer <- glmer(correct ~ child_age_centered*language +
(1|id), family="binomial", i)
id_glmer <- glmer(correct ~ child_age_centered*language +
(1|id), family="binomial", i)
summary(id_glmer)
id_glm <- glm(correct ~ child_age_centered*language, family="binomial", i)
summary(id_glm)
Anova(id_glm)
id_ar_glm <- glm(correct ~ child_age_centered*language + child_religion,
family="binomial", i)
summary(id_ar_glm)
Anova(id_ar_glm)
id_std_summary_tab <- i %>%
group_by(language, standard_num) %>%
summarize(mean = na.mean(correct),
cilo = mean-ci.low(correct),
cihi = mean+ci.high(correct))
id_std_summary_tab$language <- factor(
id_std_summary_tab$language, levels=language_vars,
labels=language_labels)
ggplot(id_std_summary_tab,
aes(x=standard_num, y=mean, color=language)) +
geom_line(aes(lty=language), size=1) +
geom_point(aes(shape=language), size=3) +
geom_errorbar(aes(ymin=cilo, ymax=cihi), size=1, width=0) +
scale_color_manual(values=language_colors,
"Language") +
scale_shape_manual(values=language_shapes,
"Language") +
scale_linetype_manual(values=language_ltys,
"Language") +
ylim(0, 1) +
scale_x_continuous(breaks=c(1, 2, 3),
label=std_axis_labels) +
sans_axes_theme_bigger +
theme(legend.position = "bottom") +
xlab("Grade") +
ylab("Mean Accuracy")
id_std_summary_tab <- i %>%
group_by(language, standard_num) %>%
summarize(mean = na.mean(correct),
cilo = mean-ci.low(correct),
cihi = mean+ci.high(correct))
ggplot(id_std_summary_tab,
aes(x=standard_num, y=mean, color=language)) +
geom_line(aes(lty=language), size=1) +
geom_point(aes(shape=language), size=3) +
geom_errorbar(aes(ymin=cilo, ymax=cihi), size=1, width=0) +
scale_color_manual(values=language_colors,
"Language") +
scale_shape_manual(values=language_shapes,
"Language") +
scale_linetype_manual(values=language_ltys,
"Language") +
ylim(0, 1) +
scale_x_continuous(breaks=c(1, 2, 3),
label=std_axis_labels) +
sans_axes_theme_bigger +
theme(legend.position = "bottom") +
xlab("Grade") +
ylab("Mean Accuracy")
i$language <- factor(i$language, levels=language_labels)
id_summary_tab <- i %>%
group_by(language) %>%
summarize(mean_accuracy = na.mean(correct),
cilo = mean_accuracy-ci.low(correct),
cihi = mean_accuracy + ci.high(correct))
ggplot(id_summary_tab,
aes(x=language, y=mean_accuracy)) +
geom_bar(stat="identity", aes(fill=language), alpha=0.9) +
scale_fill_manual(values=language_colors, name="Language") +
geom_errorbar(aes(ymin=cilo, ymax=cihi), width=0, color=line_color) +
scale_color_manual(values=language_colors, name="Language") +
ylim(0, 1) +
labs(title='Language Identification Accuracy') +
ylab("Proportion Correct") +
xlab("Grade") +
sans_axes_theme_bigger +
theme(axis.text.x=element_text(angle=60, hjust=1))
id_age_summary_tab <- i %>%
group_by(language, child_age, id) %>%
summarize(accuracy = na.mean(correct))
ggplot(id_age_summary_tab,
aes(x=child_age, y=accuracy)) +
geom_segment(aes(y=0.5, yend=0.5, x=7.2, xend=13), lty=2, colour="grey") +
stat_smooth(aes(x=child_age, y=accuracy,
color=language, fill=language),
method="lm", level=.75, fullrange=T) +
geom_rug(aes(x=child_age), color="black") +
scale_color_manual(values=language.colors, name="Language") +
scale_fill_manual(values=language.colors, name="Language") +
facet_wrap(~language, ncol=4) +
ylim(0, 1) +
labs(title='Language Identification Accuracy with Age') +
ylab("Proportion Correct") +
xlab("Child Age (years)") +
face.axes.theme
ggplot(id_age_summary_tab,
aes(x=child_age, y=accuracy)) +
geom_segment(aes(y=0.5, yend=0.5, x=7.2, xend=13), lty=2, colour="grey") +
stat_smooth(aes(x=child_age, y=accuracy,
color=language, fill=language),
method="lm", level=.75, fullrange=T) +
geom_rug(aes(x=child_age), color="black") +
scale_color_manual(values=language_colors, name="Language") +
scale_fill_manual(values=language_colors, name="Language") +
facet_wrap(~language, ncol=4) +
ylim(0, 1) +
labs(title='Language Identification Accuracy with Age') +
ylab("Proportion Correct") +
xlab("Child Age (years)") +
face.axes.theme
id_age_summary_tab <- i %>%
group_by(language, child_age, id) %>%
summarize(accuracy = na.mean(correct))
ggplot(id_age_summary_tab,
aes(x=child_age, y=accuracy)) +
geom_segment(aes(y=0.5, yend=0.5, x=7.2, xend=13), lty=2, colour="grey") +
stat_smooth(aes(x=child_age, y=accuracy,
color=language, fill=language),
method="lm", level=.75, fullrange=T) +
geom_rug(aes(x=child_age), color="black") +
scale_color_manual(values=language_colors, name="Language") +
scale_fill_manual(values=language_colors, name="Language") +
facet_wrap(~language, ncol=4) +
ylim(0, 1) +
labs(title='Language Identification Accuracy with Age') +
ylab("Proportion Correct") +
xlab("Child Age (years)") +
face_axes_theme
id_std_summary_tab <- i %>%
group_by(language, standard_num) %>%
summarize(mean = na.mean(correct),
cilo = mean-ci.low(correct),
cihi = mean+ci.high(correct))
ggplot(id_std_summary_tab,
aes(x=standard_num, y=mean, color=language)) +
geom_line(aes(lty=language), size=1) +
geom_point(aes(shape=language), size=3) +
geom_errorbar(aes(ymin=cilo, ymax=cihi), size=1, width=0) +
scale_color_manual(values=language_colors,
"Language") +
scale_shape_manual(values=language_shapes,
"Language") +
scale_linetype_manual(values=language_ltys,
"Language") +
ylim(0, 1) +
scale_x_continuous(breaks=c(1, 2, 3),
label=std_axis_labels) +
sans_axes_theme_bigger +
theme(legend.position = "bottom") +
xlab("Grade") +
ylab("Mean Accuracy")
```{r id-read-in-data}
```{r id-read-in-data}
```{r id-read-in-data}
i <- read.csv(here('data/r_dfs/subsets/language_identification_data.csv'))[,-1]
factor_vars <- c('study_name', 'id', 'child_sex', 'child_religion',
'school', 'standard',
'question_type', 'language', 'speaker_gender',
'army_navy_language')
numeric_vars <- c('standard_num', 'child_age', 'child_age_centered',
'sequence')
i <- i %>%
mutate_at(factor_vars, as.factor) %>%
mutate_at(numeric_vars, as.numeric)
i$language <- factor(i$language, levels=language_labels)
id_summary_tab <- i %>%
group_by(language) %>%
summarize(mean_accuracy = na.mean(correct),
cilo = mean_accuracy-ci.low(correct),
cihi = mean_accuracy + ci.high(correct))
ggplot(id_summary_tab,
aes(x=language, y=mean_accuracy)) +
geom_bar(stat="identity", aes(fill=language), alpha=0.9) +
scale_fill_manual(values=language_colors, name="Language") +
geom_errorbar(aes(ymin=cilo, ymax=cihi), width=0, color=line_color) +
scale_color_manual(values=language_colors, name="Language") +
ylim(0, 1) +
labs(title='Language Identification Accuracy') +
ylab("Proportion Correct") +
xlab("Grade") +
sans_axes_theme_bigger +
theme(axis.text.x=element_text(angle=60, hjust=1))
ggsave("id_accuracy_barplot.png", device = "png",
path = "plots/",
scale = 1, width = 8, height = 6, units = "in")
id_age_summary_tab <- i %>%
group_by(language, child_age, id) %>%
summarize(accuracy = na.mean(correct))
ggplot(id_age_summary_tab,
aes(x=child_age, y=accuracy)) +
geom_segment(aes(y=0.5, yend=0.5, x=7.2, xend=13), lty=2, colour="grey") +
stat_smooth(aes(x=child_age, y=accuracy,
color=language, fill=language),
method="lm", level=.75, fullrange=T) +
geom_rug(aes(x=child_age), color="black") +
scale_color_manual(values=language_colors, name="Language") +
scale_fill_manual(values=language_colors, name="Language") +
facet_wrap(~language, ncol=4) +
ylim(0, 1) +
labs(title='Language Identification Accuracy with Age') +
ylab("Proportion Correct") +
xlab("Child Age (years)") +
face_axes_theme
ggsave("id_accuracy_age.png", device = "png",
path = "plots/",
scale = 1.5, width = 6, height = 4, units = "in")
id_std_summary_tab <- i %>%
group_by(language, standard_num) %>%
summarize(mean = na.mean(correct),
cilo = mean-ci.low(correct),
cihi = mean+ci.high(correct))
ggplot(id_std_summary_tab,
aes(x=standard_num, y=mean, color=language)) +
geom_line(aes(lty=language), size=1) +
geom_point(aes(shape=language), size=3) +
geom_errorbar(aes(ymin=cilo, ymax=cihi), size=1, width=0) +
scale_color_manual(values=language_colors,
"Language") +
scale_shape_manual(values=language_shapes,
"Language") +
scale_linetype_manual(values=language_ltys,
"Language") +
ylim(0, 1) +
scale_x_continuous(breaks=c(1, 2, 3),
label=std_axis_labels) +
sans_axes_theme_bigger +
theme(legend.position = "bottom") +
xlab("Grade") +
ylab("Mean Accuracy")
ggsave("id_accuracy_std.png", device = "png",
path = "plots/final",
scale = 1, width = 7, height = 5, units = "in")
id_glmer <- glmer(correct ~ child_age_centered*language +
(1|id), family="binomial", i)
summary(id_glmer)
Anova(id_glmer)
id_ar_glmer <- glmer(correct ~ child_age_centered*language + child_religion +
(1|id), family="binomial", i)
summary(id_ar_glmer)
Anova(id_ar_glmer)
# models fail to converge
id_glm <- glm(correct ~ child_age_centered*language, family="binomial", i)
summary(id_glm)
Anova(id_glm)
id_ar_glm <- glm(correct ~ child_age_centered*language + child_religion,
family="binomial", i)
summary(id_ar_glm)
Anova(id_ar_glm)
###############################################################################
### read in data files
# hand-entered and lightly cleaned data with demographic info
d <- read.csv(here('data/r_dfs/india_socioling_data_final.csv'))
###############################################################################
likert_questions <- c("french", "tell_a_lot", "tell_education",
"tell_where_from", "ancestors", "indian")
essentialism_questions <- c("french", "ancestors", "indian")
l <- d %>% filter(question_type %in% likert_questions) %>%
dplyr::select(c("study_name", "school", "id", "standard", "standard_num",
"child_age", "child_age_centered", "child_sex",
"child_religion", "question_type", "response")) %>%
distinct(id, question_type, response, .keep_all=T)
l$response <- as.numeric(as.character(l$response))
l <- l %>% filter(!is.na(response))
l$response_coded <- l$response
l[l$question_type=="french",]$response_coded <-
6-l[l$question_type=="french",]$response
write.csv(l, here('data/r_dfs/subsets/likert_item_data.csv'))
e <- l %>%
dplyr::select(!c(response)) %>%
spread(question_type, response_coded)
cronbachs_alpha(e[essentialism_questions])
install.packages("performance")
library(performance)
cronbachs_alpha(e[essentialism_questions])
performance::cronbachs_alpha(e[essentialism_questions])
View(we)
View(e)
cor.test(e[essentialism_questions])
e[essentialism_questions]
